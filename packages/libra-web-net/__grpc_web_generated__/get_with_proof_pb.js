/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var access_path_pb = require('./access_path_pb.js');
goog.object.extend(proto, access_path_pb);
var account_state_blob_pb = require('./account_state_blob_pb.js');
goog.object.extend(proto, account_state_blob_pb);
var events_pb = require('./events_pb.js');
goog.object.extend(proto, events_pb);
var ledger_info_pb = require('./ledger_info_pb.js');
goog.object.extend(proto, ledger_info_pb);
var transaction_pb = require('./transaction_pb.js');
goog.object.extend(proto, transaction_pb);
var validator_change_pb = require('./validator_change_pb.js');
goog.object.extend(proto, validator_change_pb);
goog.exportSymbol('proto.types.GetAccountStateRequest', null, global);
goog.exportSymbol('proto.types.GetAccountStateResponse', null, global);
goog.exportSymbol('proto.types.GetAccountTransactionBySequenceNumberRequest', null, global);
goog.exportSymbol('proto.types.GetAccountTransactionBySequenceNumberResponse', null, global);
goog.exportSymbol('proto.types.GetEventsByEventAccessPathRequest', null, global);
goog.exportSymbol('proto.types.GetEventsByEventAccessPathResponse', null, global);
goog.exportSymbol('proto.types.GetTransactionsRequest', null, global);
goog.exportSymbol('proto.types.GetTransactionsResponse', null, global);
goog.exportSymbol('proto.types.RequestItem', null, global);
goog.exportSymbol('proto.types.ResponseItem', null, global);
goog.exportSymbol('proto.types.UpdateToLatestLedgerRequest', null, global);
goog.exportSymbol('proto.types.UpdateToLatestLedgerResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.types.UpdateToLatestLedgerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.UpdateToLatestLedgerRequest.repeatedFields_, null);
};
goog.inherits(proto.types.UpdateToLatestLedgerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.types.UpdateToLatestLedgerRequest.displayName = 'proto.types.UpdateToLatestLedgerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.types.RequestItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.types.RequestItem.oneofGroups_);
};
goog.inherits(proto.types.RequestItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.types.RequestItem.displayName = 'proto.types.RequestItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.types.UpdateToLatestLedgerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.UpdateToLatestLedgerResponse.repeatedFields_, null);
};
goog.inherits(proto.types.UpdateToLatestLedgerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.types.UpdateToLatestLedgerResponse.displayName = 'proto.types.UpdateToLatestLedgerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.types.ResponseItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.types.ResponseItem.oneofGroups_);
};
goog.inherits(proto.types.ResponseItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.types.ResponseItem.displayName = 'proto.types.ResponseItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.types.GetAccountStateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.types.GetAccountStateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.types.GetAccountStateRequest.displayName = 'proto.types.GetAccountStateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.types.GetAccountStateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.types.GetAccountStateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.types.GetAccountStateResponse.displayName = 'proto.types.GetAccountStateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.types.GetAccountTransactionBySequenceNumberRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.types.GetAccountTransactionBySequenceNumberRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.types.GetAccountTransactionBySequenceNumberRequest.displayName = 'proto.types.GetAccountTransactionBySequenceNumberRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.types.GetAccountTransactionBySequenceNumberResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.types.GetAccountTransactionBySequenceNumberResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.types.GetAccountTransactionBySequenceNumberResponse.displayName = 'proto.types.GetAccountTransactionBySequenceNumberResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.types.GetEventsByEventAccessPathRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.types.GetEventsByEventAccessPathRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.types.GetEventsByEventAccessPathRequest.displayName = 'proto.types.GetEventsByEventAccessPathRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.types.GetEventsByEventAccessPathResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.types.GetEventsByEventAccessPathResponse.repeatedFields_, null);
};
goog.inherits(proto.types.GetEventsByEventAccessPathResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.types.GetEventsByEventAccessPathResponse.displayName = 'proto.types.GetEventsByEventAccessPathResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.types.GetTransactionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.types.GetTransactionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.types.GetTransactionsRequest.displayName = 'proto.types.GetTransactionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.types.GetTransactionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.types.GetTransactionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.types.GetTransactionsResponse.displayName = 'proto.types.GetTransactionsResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.types.UpdateToLatestLedgerRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.types.UpdateToLatestLedgerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.types.UpdateToLatestLedgerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.types.UpdateToLatestLedgerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.UpdateToLatestLedgerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientKnownVersion: jspb.Message.getFieldWithDefault(msg, 1, 0),
    requestedItemsList: jspb.Message.toObjectList(msg.getRequestedItemsList(),
    proto.types.RequestItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.types.UpdateToLatestLedgerRequest}
 */
proto.types.UpdateToLatestLedgerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.types.UpdateToLatestLedgerRequest;
  return proto.types.UpdateToLatestLedgerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.types.UpdateToLatestLedgerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.types.UpdateToLatestLedgerRequest}
 */
proto.types.UpdateToLatestLedgerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setClientKnownVersion(value);
      break;
    case 2:
      var value = new proto.types.RequestItem;
      reader.readMessage(value,proto.types.RequestItem.deserializeBinaryFromReader);
      msg.addRequestedItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.types.UpdateToLatestLedgerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.types.UpdateToLatestLedgerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.types.UpdateToLatestLedgerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.UpdateToLatestLedgerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientKnownVersion();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getRequestedItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.types.RequestItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 client_known_version = 1;
 * @return {number}
 */
proto.types.UpdateToLatestLedgerRequest.prototype.getClientKnownVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.types.UpdateToLatestLedgerRequest.prototype.setClientKnownVersion = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated RequestItem requested_items = 2;
 * @return {!Array<!proto.types.RequestItem>}
 */
proto.types.UpdateToLatestLedgerRequest.prototype.getRequestedItemsList = function() {
  return /** @type{!Array<!proto.types.RequestItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.types.RequestItem, 2));
};


/** @param {!Array<!proto.types.RequestItem>} value */
proto.types.UpdateToLatestLedgerRequest.prototype.setRequestedItemsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.types.RequestItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.types.RequestItem}
 */
proto.types.UpdateToLatestLedgerRequest.prototype.addRequestedItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.types.RequestItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.types.UpdateToLatestLedgerRequest.prototype.clearRequestedItemsList = function() {
  this.setRequestedItemsList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.types.RequestItem.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.types.RequestItem.RequestedItemsCase = {
  REQUESTED_ITEMS_NOT_SET: 0,
  GET_ACCOUNT_STATE_REQUEST: 1,
  GET_ACCOUNT_TRANSACTION_BY_SEQUENCE_NUMBER_REQUEST: 2,
  GET_EVENTS_BY_EVENT_ACCESS_PATH_REQUEST: 3,
  GET_TRANSACTIONS_REQUEST: 4
};

/**
 * @return {proto.types.RequestItem.RequestedItemsCase}
 */
proto.types.RequestItem.prototype.getRequestedItemsCase = function() {
  return /** @type {proto.types.RequestItem.RequestedItemsCase} */(jspb.Message.computeOneofCase(this, proto.types.RequestItem.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.types.RequestItem.prototype.toObject = function(opt_includeInstance) {
  return proto.types.RequestItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.types.RequestItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.RequestItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    getAccountStateRequest: (f = msg.getGetAccountStateRequest()) && proto.types.GetAccountStateRequest.toObject(includeInstance, f),
    getAccountTransactionBySequenceNumberRequest: (f = msg.getGetAccountTransactionBySequenceNumberRequest()) && proto.types.GetAccountTransactionBySequenceNumberRequest.toObject(includeInstance, f),
    getEventsByEventAccessPathRequest: (f = msg.getGetEventsByEventAccessPathRequest()) && proto.types.GetEventsByEventAccessPathRequest.toObject(includeInstance, f),
    getTransactionsRequest: (f = msg.getGetTransactionsRequest()) && proto.types.GetTransactionsRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.types.RequestItem}
 */
proto.types.RequestItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.types.RequestItem;
  return proto.types.RequestItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.types.RequestItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.types.RequestItem}
 */
proto.types.RequestItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.types.GetAccountStateRequest;
      reader.readMessage(value,proto.types.GetAccountStateRequest.deserializeBinaryFromReader);
      msg.setGetAccountStateRequest(value);
      break;
    case 2:
      var value = new proto.types.GetAccountTransactionBySequenceNumberRequest;
      reader.readMessage(value,proto.types.GetAccountTransactionBySequenceNumberRequest.deserializeBinaryFromReader);
      msg.setGetAccountTransactionBySequenceNumberRequest(value);
      break;
    case 3:
      var value = new proto.types.GetEventsByEventAccessPathRequest;
      reader.readMessage(value,proto.types.GetEventsByEventAccessPathRequest.deserializeBinaryFromReader);
      msg.setGetEventsByEventAccessPathRequest(value);
      break;
    case 4:
      var value = new proto.types.GetTransactionsRequest;
      reader.readMessage(value,proto.types.GetTransactionsRequest.deserializeBinaryFromReader);
      msg.setGetTransactionsRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.types.RequestItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.types.RequestItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.types.RequestItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.RequestItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGetAccountStateRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.types.GetAccountStateRequest.serializeBinaryToWriter
    );
  }
  f = message.getGetAccountTransactionBySequenceNumberRequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.types.GetAccountTransactionBySequenceNumberRequest.serializeBinaryToWriter
    );
  }
  f = message.getGetEventsByEventAccessPathRequest();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.types.GetEventsByEventAccessPathRequest.serializeBinaryToWriter
    );
  }
  f = message.getGetTransactionsRequest();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.types.GetTransactionsRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional GetAccountStateRequest get_account_state_request = 1;
 * @return {?proto.types.GetAccountStateRequest}
 */
proto.types.RequestItem.prototype.getGetAccountStateRequest = function() {
  return /** @type{?proto.types.GetAccountStateRequest} */ (
    jspb.Message.getWrapperField(this, proto.types.GetAccountStateRequest, 1));
};


/** @param {?proto.types.GetAccountStateRequest|undefined} value */
proto.types.RequestItem.prototype.setGetAccountStateRequest = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.types.RequestItem.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.types.RequestItem.prototype.clearGetAccountStateRequest = function() {
  this.setGetAccountStateRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.types.RequestItem.prototype.hasGetAccountStateRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional GetAccountTransactionBySequenceNumberRequest get_account_transaction_by_sequence_number_request = 2;
 * @return {?proto.types.GetAccountTransactionBySequenceNumberRequest}
 */
proto.types.RequestItem.prototype.getGetAccountTransactionBySequenceNumberRequest = function() {
  return /** @type{?proto.types.GetAccountTransactionBySequenceNumberRequest} */ (
    jspb.Message.getWrapperField(this, proto.types.GetAccountTransactionBySequenceNumberRequest, 2));
};


/** @param {?proto.types.GetAccountTransactionBySequenceNumberRequest|undefined} value */
proto.types.RequestItem.prototype.setGetAccountTransactionBySequenceNumberRequest = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.types.RequestItem.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.types.RequestItem.prototype.clearGetAccountTransactionBySequenceNumberRequest = function() {
  this.setGetAccountTransactionBySequenceNumberRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.types.RequestItem.prototype.hasGetAccountTransactionBySequenceNumberRequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional GetEventsByEventAccessPathRequest get_events_by_event_access_path_request = 3;
 * @return {?proto.types.GetEventsByEventAccessPathRequest}
 */
proto.types.RequestItem.prototype.getGetEventsByEventAccessPathRequest = function() {
  return /** @type{?proto.types.GetEventsByEventAccessPathRequest} */ (
    jspb.Message.getWrapperField(this, proto.types.GetEventsByEventAccessPathRequest, 3));
};


/** @param {?proto.types.GetEventsByEventAccessPathRequest|undefined} value */
proto.types.RequestItem.prototype.setGetEventsByEventAccessPathRequest = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.types.RequestItem.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.types.RequestItem.prototype.clearGetEventsByEventAccessPathRequest = function() {
  this.setGetEventsByEventAccessPathRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.types.RequestItem.prototype.hasGetEventsByEventAccessPathRequest = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional GetTransactionsRequest get_transactions_request = 4;
 * @return {?proto.types.GetTransactionsRequest}
 */
proto.types.RequestItem.prototype.getGetTransactionsRequest = function() {
  return /** @type{?proto.types.GetTransactionsRequest} */ (
    jspb.Message.getWrapperField(this, proto.types.GetTransactionsRequest, 4));
};


/** @param {?proto.types.GetTransactionsRequest|undefined} value */
proto.types.RequestItem.prototype.setGetTransactionsRequest = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.types.RequestItem.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.types.RequestItem.prototype.clearGetTransactionsRequest = function() {
  this.setGetTransactionsRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.types.RequestItem.prototype.hasGetTransactionsRequest = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.types.UpdateToLatestLedgerResponse.repeatedFields_ = [1,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.types.UpdateToLatestLedgerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.types.UpdateToLatestLedgerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.types.UpdateToLatestLedgerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.UpdateToLatestLedgerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    responseItemsList: jspb.Message.toObjectList(msg.getResponseItemsList(),
    proto.types.ResponseItem.toObject, includeInstance),
    ledgerInfoWithSigs: (f = msg.getLedgerInfoWithSigs()) && ledger_info_pb.LedgerInfoWithSignatures.toObject(includeInstance, f),
    validatorChangeEventsList: jspb.Message.toObjectList(msg.getValidatorChangeEventsList(),
    validator_change_pb.ValidatorChangeEventWithProof.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.types.UpdateToLatestLedgerResponse}
 */
proto.types.UpdateToLatestLedgerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.types.UpdateToLatestLedgerResponse;
  return proto.types.UpdateToLatestLedgerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.types.UpdateToLatestLedgerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.types.UpdateToLatestLedgerResponse}
 */
proto.types.UpdateToLatestLedgerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.types.ResponseItem;
      reader.readMessage(value,proto.types.ResponseItem.deserializeBinaryFromReader);
      msg.addResponseItems(value);
      break;
    case 2:
      var value = new ledger_info_pb.LedgerInfoWithSignatures;
      reader.readMessage(value,ledger_info_pb.LedgerInfoWithSignatures.deserializeBinaryFromReader);
      msg.setLedgerInfoWithSigs(value);
      break;
    case 3:
      var value = new validator_change_pb.ValidatorChangeEventWithProof;
      reader.readMessage(value,validator_change_pb.ValidatorChangeEventWithProof.deserializeBinaryFromReader);
      msg.addValidatorChangeEvents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.types.UpdateToLatestLedgerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.types.UpdateToLatestLedgerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.types.UpdateToLatestLedgerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.UpdateToLatestLedgerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponseItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.types.ResponseItem.serializeBinaryToWriter
    );
  }
  f = message.getLedgerInfoWithSigs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      ledger_info_pb.LedgerInfoWithSignatures.serializeBinaryToWriter
    );
  }
  f = message.getValidatorChangeEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      validator_change_pb.ValidatorChangeEventWithProof.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ResponseItem response_items = 1;
 * @return {!Array<!proto.types.ResponseItem>}
 */
proto.types.UpdateToLatestLedgerResponse.prototype.getResponseItemsList = function() {
  return /** @type{!Array<!proto.types.ResponseItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.types.ResponseItem, 1));
};


/** @param {!Array<!proto.types.ResponseItem>} value */
proto.types.UpdateToLatestLedgerResponse.prototype.setResponseItemsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.types.ResponseItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.types.ResponseItem}
 */
proto.types.UpdateToLatestLedgerResponse.prototype.addResponseItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.types.ResponseItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.types.UpdateToLatestLedgerResponse.prototype.clearResponseItemsList = function() {
  this.setResponseItemsList([]);
};


/**
 * optional LedgerInfoWithSignatures ledger_info_with_sigs = 2;
 * @return {?proto.types.LedgerInfoWithSignatures}
 */
proto.types.UpdateToLatestLedgerResponse.prototype.getLedgerInfoWithSigs = function() {
  return /** @type{?proto.types.LedgerInfoWithSignatures} */ (
    jspb.Message.getWrapperField(this, ledger_info_pb.LedgerInfoWithSignatures, 2));
};


/** @param {?proto.types.LedgerInfoWithSignatures|undefined} value */
proto.types.UpdateToLatestLedgerResponse.prototype.setLedgerInfoWithSigs = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.types.UpdateToLatestLedgerResponse.prototype.clearLedgerInfoWithSigs = function() {
  this.setLedgerInfoWithSigs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.types.UpdateToLatestLedgerResponse.prototype.hasLedgerInfoWithSigs = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated ValidatorChangeEventWithProof validator_change_events = 3;
 * @return {!Array<!proto.types.ValidatorChangeEventWithProof>}
 */
proto.types.UpdateToLatestLedgerResponse.prototype.getValidatorChangeEventsList = function() {
  return /** @type{!Array<!proto.types.ValidatorChangeEventWithProof>} */ (
    jspb.Message.getRepeatedWrapperField(this, validator_change_pb.ValidatorChangeEventWithProof, 3));
};


/** @param {!Array<!proto.types.ValidatorChangeEventWithProof>} value */
proto.types.UpdateToLatestLedgerResponse.prototype.setValidatorChangeEventsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.types.ValidatorChangeEventWithProof=} opt_value
 * @param {number=} opt_index
 * @return {!proto.types.ValidatorChangeEventWithProof}
 */
proto.types.UpdateToLatestLedgerResponse.prototype.addValidatorChangeEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.types.ValidatorChangeEventWithProof, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.types.UpdateToLatestLedgerResponse.prototype.clearValidatorChangeEventsList = function() {
  this.setValidatorChangeEventsList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.types.ResponseItem.oneofGroups_ = [[3,4,5,6]];

/**
 * @enum {number}
 */
proto.types.ResponseItem.ResponseItemsCase = {
  RESPONSE_ITEMS_NOT_SET: 0,
  GET_ACCOUNT_STATE_RESPONSE: 3,
  GET_ACCOUNT_TRANSACTION_BY_SEQUENCE_NUMBER_RESPONSE: 4,
  GET_EVENTS_BY_EVENT_ACCESS_PATH_RESPONSE: 5,
  GET_TRANSACTIONS_RESPONSE: 6
};

/**
 * @return {proto.types.ResponseItem.ResponseItemsCase}
 */
proto.types.ResponseItem.prototype.getResponseItemsCase = function() {
  return /** @type {proto.types.ResponseItem.ResponseItemsCase} */(jspb.Message.computeOneofCase(this, proto.types.ResponseItem.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.types.ResponseItem.prototype.toObject = function(opt_includeInstance) {
  return proto.types.ResponseItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.types.ResponseItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.ResponseItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    getAccountStateResponse: (f = msg.getGetAccountStateResponse()) && proto.types.GetAccountStateResponse.toObject(includeInstance, f),
    getAccountTransactionBySequenceNumberResponse: (f = msg.getGetAccountTransactionBySequenceNumberResponse()) && proto.types.GetAccountTransactionBySequenceNumberResponse.toObject(includeInstance, f),
    getEventsByEventAccessPathResponse: (f = msg.getGetEventsByEventAccessPathResponse()) && proto.types.GetEventsByEventAccessPathResponse.toObject(includeInstance, f),
    getTransactionsResponse: (f = msg.getGetTransactionsResponse()) && proto.types.GetTransactionsResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.types.ResponseItem}
 */
proto.types.ResponseItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.types.ResponseItem;
  return proto.types.ResponseItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.types.ResponseItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.types.ResponseItem}
 */
proto.types.ResponseItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = new proto.types.GetAccountStateResponse;
      reader.readMessage(value,proto.types.GetAccountStateResponse.deserializeBinaryFromReader);
      msg.setGetAccountStateResponse(value);
      break;
    case 4:
      var value = new proto.types.GetAccountTransactionBySequenceNumberResponse;
      reader.readMessage(value,proto.types.GetAccountTransactionBySequenceNumberResponse.deserializeBinaryFromReader);
      msg.setGetAccountTransactionBySequenceNumberResponse(value);
      break;
    case 5:
      var value = new proto.types.GetEventsByEventAccessPathResponse;
      reader.readMessage(value,proto.types.GetEventsByEventAccessPathResponse.deserializeBinaryFromReader);
      msg.setGetEventsByEventAccessPathResponse(value);
      break;
    case 6:
      var value = new proto.types.GetTransactionsResponse;
      reader.readMessage(value,proto.types.GetTransactionsResponse.deserializeBinaryFromReader);
      msg.setGetTransactionsResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.types.ResponseItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.types.ResponseItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.types.ResponseItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.ResponseItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGetAccountStateResponse();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.types.GetAccountStateResponse.serializeBinaryToWriter
    );
  }
  f = message.getGetAccountTransactionBySequenceNumberResponse();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.types.GetAccountTransactionBySequenceNumberResponse.serializeBinaryToWriter
    );
  }
  f = message.getGetEventsByEventAccessPathResponse();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.types.GetEventsByEventAccessPathResponse.serializeBinaryToWriter
    );
  }
  f = message.getGetTransactionsResponse();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.types.GetTransactionsResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional GetAccountStateResponse get_account_state_response = 3;
 * @return {?proto.types.GetAccountStateResponse}
 */
proto.types.ResponseItem.prototype.getGetAccountStateResponse = function() {
  return /** @type{?proto.types.GetAccountStateResponse} */ (
    jspb.Message.getWrapperField(this, proto.types.GetAccountStateResponse, 3));
};


/** @param {?proto.types.GetAccountStateResponse|undefined} value */
proto.types.ResponseItem.prototype.setGetAccountStateResponse = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.types.ResponseItem.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.types.ResponseItem.prototype.clearGetAccountStateResponse = function() {
  this.setGetAccountStateResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.types.ResponseItem.prototype.hasGetAccountStateResponse = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional GetAccountTransactionBySequenceNumberResponse get_account_transaction_by_sequence_number_response = 4;
 * @return {?proto.types.GetAccountTransactionBySequenceNumberResponse}
 */
proto.types.ResponseItem.prototype.getGetAccountTransactionBySequenceNumberResponse = function() {
  return /** @type{?proto.types.GetAccountTransactionBySequenceNumberResponse} */ (
    jspb.Message.getWrapperField(this, proto.types.GetAccountTransactionBySequenceNumberResponse, 4));
};


/** @param {?proto.types.GetAccountTransactionBySequenceNumberResponse|undefined} value */
proto.types.ResponseItem.prototype.setGetAccountTransactionBySequenceNumberResponse = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.types.ResponseItem.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.types.ResponseItem.prototype.clearGetAccountTransactionBySequenceNumberResponse = function() {
  this.setGetAccountTransactionBySequenceNumberResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.types.ResponseItem.prototype.hasGetAccountTransactionBySequenceNumberResponse = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional GetEventsByEventAccessPathResponse get_events_by_event_access_path_response = 5;
 * @return {?proto.types.GetEventsByEventAccessPathResponse}
 */
proto.types.ResponseItem.prototype.getGetEventsByEventAccessPathResponse = function() {
  return /** @type{?proto.types.GetEventsByEventAccessPathResponse} */ (
    jspb.Message.getWrapperField(this, proto.types.GetEventsByEventAccessPathResponse, 5));
};


/** @param {?proto.types.GetEventsByEventAccessPathResponse|undefined} value */
proto.types.ResponseItem.prototype.setGetEventsByEventAccessPathResponse = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.types.ResponseItem.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.types.ResponseItem.prototype.clearGetEventsByEventAccessPathResponse = function() {
  this.setGetEventsByEventAccessPathResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.types.ResponseItem.prototype.hasGetEventsByEventAccessPathResponse = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional GetTransactionsResponse get_transactions_response = 6;
 * @return {?proto.types.GetTransactionsResponse}
 */
proto.types.ResponseItem.prototype.getGetTransactionsResponse = function() {
  return /** @type{?proto.types.GetTransactionsResponse} */ (
    jspb.Message.getWrapperField(this, proto.types.GetTransactionsResponse, 6));
};


/** @param {?proto.types.GetTransactionsResponse|undefined} value */
proto.types.ResponseItem.prototype.setGetTransactionsResponse = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.types.ResponseItem.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.types.ResponseItem.prototype.clearGetTransactionsResponse = function() {
  this.setGetTransactionsResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.types.ResponseItem.prototype.hasGetTransactionsResponse = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.types.GetAccountStateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.types.GetAccountStateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.types.GetAccountStateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.GetAccountStateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: msg.getAddress_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.types.GetAccountStateRequest}
 */
proto.types.GetAccountStateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.types.GetAccountStateRequest;
  return proto.types.GetAccountStateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.types.GetAccountStateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.types.GetAccountStateRequest}
 */
proto.types.GetAccountStateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.types.GetAccountStateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.types.GetAccountStateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.types.GetAccountStateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.GetAccountStateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes address = 1;
 * @return {string}
 */
proto.types.GetAccountStateRequest.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes address = 1;
 * This is a type-conversion wrapper around `getAddress()`
 * @return {string}
 */
proto.types.GetAccountStateRequest.prototype.getAddress_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAddress()));
};


/**
 * optional bytes address = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAddress()`
 * @return {!Uint8Array}
 */
proto.types.GetAccountStateRequest.prototype.getAddress_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAddress()));
};


/** @param {!(string|Uint8Array)} value */
proto.types.GetAccountStateRequest.prototype.setAddress = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.types.GetAccountStateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.types.GetAccountStateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.types.GetAccountStateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.GetAccountStateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountStateWithProof: (f = msg.getAccountStateWithProof()) && account_state_blob_pb.AccountStateWithProof.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.types.GetAccountStateResponse}
 */
proto.types.GetAccountStateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.types.GetAccountStateResponse;
  return proto.types.GetAccountStateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.types.GetAccountStateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.types.GetAccountStateResponse}
 */
proto.types.GetAccountStateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new account_state_blob_pb.AccountStateWithProof;
      reader.readMessage(value,account_state_blob_pb.AccountStateWithProof.deserializeBinaryFromReader);
      msg.setAccountStateWithProof(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.types.GetAccountStateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.types.GetAccountStateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.types.GetAccountStateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.GetAccountStateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountStateWithProof();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      account_state_blob_pb.AccountStateWithProof.serializeBinaryToWriter
    );
  }
};


/**
 * optional AccountStateWithProof account_state_with_proof = 1;
 * @return {?proto.types.AccountStateWithProof}
 */
proto.types.GetAccountStateResponse.prototype.getAccountStateWithProof = function() {
  return /** @type{?proto.types.AccountStateWithProof} */ (
    jspb.Message.getWrapperField(this, account_state_blob_pb.AccountStateWithProof, 1));
};


/** @param {?proto.types.AccountStateWithProof|undefined} value */
proto.types.GetAccountStateResponse.prototype.setAccountStateWithProof = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.types.GetAccountStateResponse.prototype.clearAccountStateWithProof = function() {
  this.setAccountStateWithProof(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.types.GetAccountStateResponse.prototype.hasAccountStateWithProof = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.types.GetAccountTransactionBySequenceNumberRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.types.GetAccountTransactionBySequenceNumberRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.types.GetAccountTransactionBySequenceNumberRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.GetAccountTransactionBySequenceNumberRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    account: msg.getAccount_asB64(),
    sequenceNumber: jspb.Message.getFieldWithDefault(msg, 2, 0),
    fetchEvents: jspb.Message.getFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.types.GetAccountTransactionBySequenceNumberRequest}
 */
proto.types.GetAccountTransactionBySequenceNumberRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.types.GetAccountTransactionBySequenceNumberRequest;
  return proto.types.GetAccountTransactionBySequenceNumberRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.types.GetAccountTransactionBySequenceNumberRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.types.GetAccountTransactionBySequenceNumberRequest}
 */
proto.types.GetAccountTransactionBySequenceNumberRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAccount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSequenceNumber(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFetchEvents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.types.GetAccountTransactionBySequenceNumberRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.types.GetAccountTransactionBySequenceNumberRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.types.GetAccountTransactionBySequenceNumberRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.GetAccountTransactionBySequenceNumberRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccount_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getSequenceNumber();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getFetchEvents();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional bytes account = 1;
 * @return {string}
 */
proto.types.GetAccountTransactionBySequenceNumberRequest.prototype.getAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes account = 1;
 * This is a type-conversion wrapper around `getAccount()`
 * @return {string}
 */
proto.types.GetAccountTransactionBySequenceNumberRequest.prototype.getAccount_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAccount()));
};


/**
 * optional bytes account = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAccount()`
 * @return {!Uint8Array}
 */
proto.types.GetAccountTransactionBySequenceNumberRequest.prototype.getAccount_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAccount()));
};


/** @param {!(string|Uint8Array)} value */
proto.types.GetAccountTransactionBySequenceNumberRequest.prototype.setAccount = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint64 sequence_number = 2;
 * @return {number}
 */
proto.types.GetAccountTransactionBySequenceNumberRequest.prototype.getSequenceNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.types.GetAccountTransactionBySequenceNumberRequest.prototype.setSequenceNumber = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool fetch_events = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.types.GetAccountTransactionBySequenceNumberRequest.prototype.getFetchEvents = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.types.GetAccountTransactionBySequenceNumberRequest.prototype.setFetchEvents = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.types.GetAccountTransactionBySequenceNumberResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.types.GetAccountTransactionBySequenceNumberResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.types.GetAccountTransactionBySequenceNumberResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.GetAccountTransactionBySequenceNumberResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    signedTransactionWithProof: (f = msg.getSignedTransactionWithProof()) && transaction_pb.SignedTransactionWithProof.toObject(includeInstance, f),
    proofOfCurrentSequenceNumber: (f = msg.getProofOfCurrentSequenceNumber()) && account_state_blob_pb.AccountStateWithProof.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.types.GetAccountTransactionBySequenceNumberResponse}
 */
proto.types.GetAccountTransactionBySequenceNumberResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.types.GetAccountTransactionBySequenceNumberResponse;
  return proto.types.GetAccountTransactionBySequenceNumberResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.types.GetAccountTransactionBySequenceNumberResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.types.GetAccountTransactionBySequenceNumberResponse}
 */
proto.types.GetAccountTransactionBySequenceNumberResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new transaction_pb.SignedTransactionWithProof;
      reader.readMessage(value,transaction_pb.SignedTransactionWithProof.deserializeBinaryFromReader);
      msg.setSignedTransactionWithProof(value);
      break;
    case 3:
      var value = new account_state_blob_pb.AccountStateWithProof;
      reader.readMessage(value,account_state_blob_pb.AccountStateWithProof.deserializeBinaryFromReader);
      msg.setProofOfCurrentSequenceNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.types.GetAccountTransactionBySequenceNumberResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.types.GetAccountTransactionBySequenceNumberResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.types.GetAccountTransactionBySequenceNumberResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.GetAccountTransactionBySequenceNumberResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSignedTransactionWithProof();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      transaction_pb.SignedTransactionWithProof.serializeBinaryToWriter
    );
  }
  f = message.getProofOfCurrentSequenceNumber();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      account_state_blob_pb.AccountStateWithProof.serializeBinaryToWriter
    );
  }
};


/**
 * optional SignedTransactionWithProof signed_transaction_with_proof = 2;
 * @return {?proto.types.SignedTransactionWithProof}
 */
proto.types.GetAccountTransactionBySequenceNumberResponse.prototype.getSignedTransactionWithProof = function() {
  return /** @type{?proto.types.SignedTransactionWithProof} */ (
    jspb.Message.getWrapperField(this, transaction_pb.SignedTransactionWithProof, 2));
};


/** @param {?proto.types.SignedTransactionWithProof|undefined} value */
proto.types.GetAccountTransactionBySequenceNumberResponse.prototype.setSignedTransactionWithProof = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.types.GetAccountTransactionBySequenceNumberResponse.prototype.clearSignedTransactionWithProof = function() {
  this.setSignedTransactionWithProof(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.types.GetAccountTransactionBySequenceNumberResponse.prototype.hasSignedTransactionWithProof = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional AccountStateWithProof proof_of_current_sequence_number = 3;
 * @return {?proto.types.AccountStateWithProof}
 */
proto.types.GetAccountTransactionBySequenceNumberResponse.prototype.getProofOfCurrentSequenceNumber = function() {
  return /** @type{?proto.types.AccountStateWithProof} */ (
    jspb.Message.getWrapperField(this, account_state_blob_pb.AccountStateWithProof, 3));
};


/** @param {?proto.types.AccountStateWithProof|undefined} value */
proto.types.GetAccountTransactionBySequenceNumberResponse.prototype.setProofOfCurrentSequenceNumber = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.types.GetAccountTransactionBySequenceNumberResponse.prototype.clearProofOfCurrentSequenceNumber = function() {
  this.setProofOfCurrentSequenceNumber(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.types.GetAccountTransactionBySequenceNumberResponse.prototype.hasProofOfCurrentSequenceNumber = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.types.GetEventsByEventAccessPathRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.types.GetEventsByEventAccessPathRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.types.GetEventsByEventAccessPathRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.GetEventsByEventAccessPathRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    accessPath: (f = msg.getAccessPath()) && access_path_pb.AccessPath.toObject(includeInstance, f),
    startEventSeqNum: jspb.Message.getFieldWithDefault(msg, 2, 0),
    ascending: jspb.Message.getFieldWithDefault(msg, 3, false),
    limit: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.types.GetEventsByEventAccessPathRequest}
 */
proto.types.GetEventsByEventAccessPathRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.types.GetEventsByEventAccessPathRequest;
  return proto.types.GetEventsByEventAccessPathRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.types.GetEventsByEventAccessPathRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.types.GetEventsByEventAccessPathRequest}
 */
proto.types.GetEventsByEventAccessPathRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new access_path_pb.AccessPath;
      reader.readMessage(value,access_path_pb.AccessPath.deserializeBinaryFromReader);
      msg.setAccessPath(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStartEventSeqNum(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAscending(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.types.GetEventsByEventAccessPathRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.types.GetEventsByEventAccessPathRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.types.GetEventsByEventAccessPathRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.GetEventsByEventAccessPathRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccessPath();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      access_path_pb.AccessPath.serializeBinaryToWriter
    );
  }
  f = message.getStartEventSeqNum();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getAscending();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
};


/**
 * optional AccessPath access_path = 1;
 * @return {?proto.types.AccessPath}
 */
proto.types.GetEventsByEventAccessPathRequest.prototype.getAccessPath = function() {
  return /** @type{?proto.types.AccessPath} */ (
    jspb.Message.getWrapperField(this, access_path_pb.AccessPath, 1));
};


/** @param {?proto.types.AccessPath|undefined} value */
proto.types.GetEventsByEventAccessPathRequest.prototype.setAccessPath = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.types.GetEventsByEventAccessPathRequest.prototype.clearAccessPath = function() {
  this.setAccessPath(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.types.GetEventsByEventAccessPathRequest.prototype.hasAccessPath = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 start_event_seq_num = 2;
 * @return {number}
 */
proto.types.GetEventsByEventAccessPathRequest.prototype.getStartEventSeqNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.types.GetEventsByEventAccessPathRequest.prototype.setStartEventSeqNum = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool ascending = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.types.GetEventsByEventAccessPathRequest.prototype.getAscending = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.types.GetEventsByEventAccessPathRequest.prototype.setAscending = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional uint64 limit = 4;
 * @return {number}
 */
proto.types.GetEventsByEventAccessPathRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.types.GetEventsByEventAccessPathRequest.prototype.setLimit = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.types.GetEventsByEventAccessPathResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.types.GetEventsByEventAccessPathResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.types.GetEventsByEventAccessPathResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.types.GetEventsByEventAccessPathResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.GetEventsByEventAccessPathResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventsWithProofList: jspb.Message.toObjectList(msg.getEventsWithProofList(),
    events_pb.EventWithProof.toObject, includeInstance),
    proofOfLatestEvent: (f = msg.getProofOfLatestEvent()) && account_state_blob_pb.AccountStateWithProof.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.types.GetEventsByEventAccessPathResponse}
 */
proto.types.GetEventsByEventAccessPathResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.types.GetEventsByEventAccessPathResponse;
  return proto.types.GetEventsByEventAccessPathResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.types.GetEventsByEventAccessPathResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.types.GetEventsByEventAccessPathResponse}
 */
proto.types.GetEventsByEventAccessPathResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new events_pb.EventWithProof;
      reader.readMessage(value,events_pb.EventWithProof.deserializeBinaryFromReader);
      msg.addEventsWithProof(value);
      break;
    case 2:
      var value = new account_state_blob_pb.AccountStateWithProof;
      reader.readMessage(value,account_state_blob_pb.AccountStateWithProof.deserializeBinaryFromReader);
      msg.setProofOfLatestEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.types.GetEventsByEventAccessPathResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.types.GetEventsByEventAccessPathResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.types.GetEventsByEventAccessPathResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.GetEventsByEventAccessPathResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventsWithProofList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      events_pb.EventWithProof.serializeBinaryToWriter
    );
  }
  f = message.getProofOfLatestEvent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      account_state_blob_pb.AccountStateWithProof.serializeBinaryToWriter
    );
  }
};


/**
 * repeated EventWithProof events_with_proof = 1;
 * @return {!Array<!proto.types.EventWithProof>}
 */
proto.types.GetEventsByEventAccessPathResponse.prototype.getEventsWithProofList = function() {
  return /** @type{!Array<!proto.types.EventWithProof>} */ (
    jspb.Message.getRepeatedWrapperField(this, events_pb.EventWithProof, 1));
};


/** @param {!Array<!proto.types.EventWithProof>} value */
proto.types.GetEventsByEventAccessPathResponse.prototype.setEventsWithProofList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.types.EventWithProof=} opt_value
 * @param {number=} opt_index
 * @return {!proto.types.EventWithProof}
 */
proto.types.GetEventsByEventAccessPathResponse.prototype.addEventsWithProof = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.types.EventWithProof, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.types.GetEventsByEventAccessPathResponse.prototype.clearEventsWithProofList = function() {
  this.setEventsWithProofList([]);
};


/**
 * optional AccountStateWithProof proof_of_latest_event = 2;
 * @return {?proto.types.AccountStateWithProof}
 */
proto.types.GetEventsByEventAccessPathResponse.prototype.getProofOfLatestEvent = function() {
  return /** @type{?proto.types.AccountStateWithProof} */ (
    jspb.Message.getWrapperField(this, account_state_blob_pb.AccountStateWithProof, 2));
};


/** @param {?proto.types.AccountStateWithProof|undefined} value */
proto.types.GetEventsByEventAccessPathResponse.prototype.setProofOfLatestEvent = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.types.GetEventsByEventAccessPathResponse.prototype.clearProofOfLatestEvent = function() {
  this.setProofOfLatestEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.types.GetEventsByEventAccessPathResponse.prototype.hasProofOfLatestEvent = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.types.GetTransactionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.types.GetTransactionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.types.GetTransactionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.GetTransactionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    startVersion: jspb.Message.getFieldWithDefault(msg, 1, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
    fetchEvents: jspb.Message.getFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.types.GetTransactionsRequest}
 */
proto.types.GetTransactionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.types.GetTransactionsRequest;
  return proto.types.GetTransactionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.types.GetTransactionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.types.GetTransactionsRequest}
 */
proto.types.GetTransactionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStartVersion(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLimit(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFetchEvents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.types.GetTransactionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.types.GetTransactionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.types.GetTransactionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.GetTransactionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartVersion();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getFetchEvents();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional uint64 start_version = 1;
 * @return {number}
 */
proto.types.GetTransactionsRequest.prototype.getStartVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.types.GetTransactionsRequest.prototype.setStartVersion = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 limit = 2;
 * @return {number}
 */
proto.types.GetTransactionsRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.types.GetTransactionsRequest.prototype.setLimit = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool fetch_events = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.types.GetTransactionsRequest.prototype.getFetchEvents = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.types.GetTransactionsRequest.prototype.setFetchEvents = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.types.GetTransactionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.types.GetTransactionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.types.GetTransactionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.GetTransactionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    txnListWithProof: (f = msg.getTxnListWithProof()) && transaction_pb.TransactionListWithProof.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.types.GetTransactionsResponse}
 */
proto.types.GetTransactionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.types.GetTransactionsResponse;
  return proto.types.GetTransactionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.types.GetTransactionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.types.GetTransactionsResponse}
 */
proto.types.GetTransactionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new transaction_pb.TransactionListWithProof;
      reader.readMessage(value,transaction_pb.TransactionListWithProof.deserializeBinaryFromReader);
      msg.setTxnListWithProof(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.types.GetTransactionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.types.GetTransactionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.types.GetTransactionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.types.GetTransactionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTxnListWithProof();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      transaction_pb.TransactionListWithProof.serializeBinaryToWriter
    );
  }
};


/**
 * optional TransactionListWithProof txn_list_with_proof = 1;
 * @return {?proto.types.TransactionListWithProof}
 */
proto.types.GetTransactionsResponse.prototype.getTxnListWithProof = function() {
  return /** @type{?proto.types.TransactionListWithProof} */ (
    jspb.Message.getWrapperField(this, transaction_pb.TransactionListWithProof, 1));
};


/** @param {?proto.types.TransactionListWithProof|undefined} value */
proto.types.GetTransactionsResponse.prototype.setTxnListWithProof = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.types.GetTransactionsResponse.prototype.clearTxnListWithProof = function() {
  this.setTxnListWithProof(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.types.GetTransactionsResponse.prototype.hasTxnListWithProof = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.types);
